#!/bin/bash -l

%manual

DESCRIPTION

  Run GEFF model
  and prepare model input and output for archiving/dissemination.


ANALYSTS

  No known problems/solutions yet.


OPERATORS

  Try re-running once.
  Call Integration Team analyst.

%end

%includeonce <ecflow_bash.h>
%includeonce <sim.h>
%includeonce <const.h>
%includeonce <static.h>
%includeonce <lib.h>
%includeonce <geff.h>
%includeonce <eclib.h>
%includeonce <cdo.h>
%includeonce <nco.h>

date1=$sim_ymd
date2=$(dateincr $sim_ymd +$sim_numdays)

mkdir -p input

if [[ $sim_cold_start -ne 1 ]]; then
    init_file='rest.nc'
else
    init_file='none'
fi

cat << EOF > input/ecfire.namelist
&CONTROL
output_file='ecfire.nc',
rundir='./',
date1=$date1,
date2=$date2,
nday=$sim_numdays,
time=12,
init_file='$init_file',
lstick=.FALSE.,
now='$date1',
version='$geff_version'
/
&CLIMATE
tempfile='tt.nc',
maxtempfile='ttmax.nc',
mintempfile='ttmin.nc',
rhfile='rh.nc',
maxrhfile='rhmax.nc',
minrhfile='rhmin.nc',
rainfile='pr.nc',
ccfile='cc.nc',
wspeedfile='ws.nc',
snowfile='sc.nc',
dpfile='prdur.nc',
vsfile='vs.nc',
/
&CONSTDATA
lsmfile='lm.nc',
crfile='cr.nc',
fmfile='fm.nc',
slopefile='slope.nc',
cvfile='vc.nc',
rainclimfile='prclim.nc'
/
EOF

date

if [[ $sim_cold_start -ne 1 ]]; then
    zcat $sim_ic_dir/ic.nc.gz > input/rest.nc
fi

date

for v in vs lm slope vc prclim fm cr; do
  zcat $const_dir/$v.nc.gz > input/$v.nc
done

date

pids=''
for v in tt ttmax ttmin rh rhmax rhmin pr cc ws sc prdur; do
  zcat $sim_dir/$v.nc.gz > input/$v.nc &
  pids="$pids $!"
done
wait $pids

date

ls -l input/
ls -l ./

mkdir -p output


# ================================
# execute GEFF binary
# ================================

geff_exe

date

ls -l input/
ls -l output/
ls -l ./


# Add 'version' attribute to the NetCDF output

ncatted -O -a version,global,c,c,"$geff_version" ecfire.nc

date

case $sim_id in fillup )
    # store restart file on shared filesystem
    cp output/ecfire.out $sim_dir/
    ncatted -O -a version,global,c,c,"$geff_version" input/restart_ecfire.nc
    gzip -c input/restart_ecfire.nc > $sim_dir/next_run_ic.nc.gz
    date
    ;;
esac

case $sim_id in hr | 00 )
    # store forcings of HRES and CONTROL on shared filesystem
    ecmwf_distvar='t2,maxt2,mint2,rh,maxrh,minrh,tp,cc,wspeed,snow,dp,vs,lsm,slope,cv,tpclim,fm,cr'
    name=ECMWF_FO_${sim_ymd}_1200_${sim_id}
    cdo -f nc4 -z zip_1 -selvar,$ecmwf_distvar ecfire.nc $name.nc
    ncatted -O -a version,global,c,c,"$geff_version" $name.nc
    mv ECMWF_FO_*.nc $sim_dir/
    date
    ;;
esac

case $sim_id in hr | [0-9][0-9] )
    # Store GEFF HRES and ENS output on shared file system.
    mark5_distvar='kbdi,df,mark5_ros,fdi'
    nfdrs_distvar='nfdrs_ros,sc,erc,bi,ic'
    fwi_distvar='fwi,ffmc,dmc,dc,isi,bui,dsr,danger_risk'
    name=ECMWF_MARK5_${sim_ymd}_1200_${sim_id}
    cdo -f nc4 -z zip_1 -selvar,$mark5_distvar ecfire.nc $name.nc
    cdo -chname,mark5_ros,ros $name.nc tmp.nc 
    mv tmp.nc  $name.nc
    ncatted -O -a version,global,c,c,"$geff_version" $name.nc
    name=ECMWF_FWI_${sim_ymd}_1200_${sim_id}
    cdo -f nc4 -z zip_1 -selvar,$fwi_distvar ecfire.nc $name.nc
    ncatted -O -a version,global,c,c,"$geff_version" $name.nc
    name=ECMWF_NFDRS_${sim_ymd}_1200_${sim_id}
    cdo -f nc4 -z zip_1 -selvar,$nfdrs_distvar ecfire.nc $name.nc
    cdo -chname,nfdrs_ros,ros $name.nc tmp.nc 
    mv tmp.nc  $name.nc
    ncatted -O -a version,global,c,c,"$geff_version" $name.nc
    mv ECMWF_MARK5_*.nc ECMWF_FWI_*.nc ECMWF_NFDRS_* $sim_dir/
    date
    ;;
esac

ls -l $sim_dir
