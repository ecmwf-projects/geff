#!/bin/bash -l

%manual

Run GEFF model.

%end

%includeonce <ecflow_bash.h>
%includeonce <sim.h>
%includeonce <const.h>
%includeonce <static.h>
%includeonce <lib.h>
%includeonce <geff.h>

%includeonce <cdo.h>
%includeonce <nco.h>

date1=$sim_ymd
date2=$(dateincr $sim_ymd +$sim_numdays)

mkdir -p input

if [[ $sim_cold_start -ne 1 ]]; then
    init_file='rest.nc'
else
    init_file='none'
fi

cat << EOF > input/ecfire.namelist
&CONTROL
output_file='ecfire.nc',
rundir='./',
date1=$date1,
date2=$date2,
nday=$sim_numdays,
time=12,
init_file='$init_file',
lstick=.FALSE.,
now='$date1',
version='$geff_version'
/
&CLIMATE
tempfile='tt.nc',
maxtempfile='ttmax.nc',
mintempfile='ttmin.nc',
rhfile='rh.nc',
maxrhfile='rhmax.nc',
minrhfile='rhmin.nc',
rainfile='pr.nc',
ccfile='cc.nc',
wspeedfile='ws.nc',
snowfile='sc.nc',
dpfile='prdur.nc',
vsfile='vs.nc',
/
&CONSTDATA
lsmfile='lm.nc',
crfile='cr.nc',
fmfile='fm.nc',
slopefile='slope.nc',
cvfile='vc.nc',
rainclimfile='prclim.nc'
/
EOF


if [[ $sim_cold_start -ne 1 ]]; then
    zcat $sim_ic_dir/ic.nc.gz > input/rest.nc
fi

for v in vs lm slope vc prclim fm cr; do
  zcat $const_dir/$v.nc.gz > input/$v.nc
done

pids=''
for v in tt ttmax ttmin rh rhmax rhmin pr cc ws sc prdur; do
  zcat $sim_dir/$v.nc.gz > input/$v.nc &
  pids="$pids $!"
done
wait $pids

ls -l input/
ls -l ./

mkdir -p output


# ================================
# execute GEFF binary
# ================================

geff_exe


ls -l input/
ls -l output/
ls -l ./

cp output/ecfire.out $sim_dir/
ncatted -O -a version,global,c,c,"$geff_version" input/restart_ecfire.nc
gzip -c input/restart_ecfire.nc > $sim_dir/next_run_ic.nc.gz

mark5_distvar='kbdi mdf mros mfdi'
nfdrs_distvar='nros nsc nerc nbi nic'
fwi_distvar='ffwi ffmc fdmc fdc fisi fbui fdsr fdri'


# Add 'version' attribute to the NetCDF output

ncatted -O -a version,global,c,c,"$geff_version" ecfire.nc


# Transfer NetCDF output from local
# node disk to the shared file system.

pids=''
for var in $mark5_distvar; do
  (name=mark5_${var}_${sim_ymd}_1200_${sim_id}
  cdo -selvar,$var ecfire.nc $name.nc
  ncatted -O -a version,global,c,c,"$geff_version" $name.nc
  gzip -c $name.nc > $sim_dir/$name.nc.gz) &
  pids="$pids $!"
done
wait $pids
pids=''
for var in $nfdrs_distvar; do
  (name=nfdrs_${var}_${sim_ymd}_1200_${sim_id}
  cdo -selvar,$var ecfire.nc $name.nc
  ncatted -O -a version,global,c,c,"$geff_version" $name.nc
  gzip -c $name.nc > $sim_dir/$name.nc.gz) &
  pids="$pids $!"
done
wait $pids
pids=''
for var in $fwi_distvar; do
  (name=cfwis_${var}_${sim_ymd}_1200_${sim_id}
  cdo -selvar,$var ecfire.nc $name.nc
  ncatted -O -a version,global,c,c,"$geff_version" $name.nc
  gzip -c $name.nc > $sim_dir/$name.nc.gz) &
  pids="$pids $!"
done
wait $pids

ls -l $sim_dir
